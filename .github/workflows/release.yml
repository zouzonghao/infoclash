name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: infoclash-linux-amd64
          - os: windows-latest
            asset_name: infoclash-windows-amd64.exe
          - os: macos-14 # Apple Silicon runner for arm64
            asset_name: infoclash-macos-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install build dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Build application
        shell: bash
        run: |
          # Go Tidy
          go mod tidy
          # Frontend build
          cd frontend
          npm install
          npm run build
          cd ..
          # Copy frontend assets to backend
          cp -R ./frontend/dist ./backend/dist
          # Backend build (native, CGO enabled by default)
          echo "Building for ${{ runner.os }}..."
          go build -ldflags="-s -w" -o ${{ matrix.asset_name }} ./backend
          # Clean up
          rm -rf ./backend/dist

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ matrix.asset_name }}